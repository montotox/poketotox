{"version":3,"sources":["api.js","constants/constants.js","contexts/likeContext.js","assets/svg/logo.svg","assets/svg/spain.svg","assets/svg/us.svg","components/Appbar/Appbar.js","components/Searchbar/Searchbar.js","assets/svg/Pokeball.svg","components/Loader/Loader.js","assets/svg/PokeballBackground.svg","components/Details/Details.js","components/Card/Card.js","components/Pagination/Pagination.js","components/Pokedex/Pokedex.js","components/NotFound/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["searchPokemon","pokemon","a","url","fetch","response","json","data","getPokemons","limit","pagination","offset","getPokemonData","LikeContext","React","createContext","pokemonsLiked","updatePokemonsLikes","id","LikesProvider","Provider","Appbar","props","isEnglish","setIsEnglish","changeLanguage","language","src","Spanish","alt","onClick","English","className","Logo","Searchbar","onSearch","useState","search","setSearch","e","placeholder","onChange","target","value","console","log","length","Loader","Pokeball","Details","selected","setModal","primaryType","types","type","name","image1","sprites","front_default","image2","back_default","image3","front_shiny","image4","back_shiny","idPokemon","move1","moves","move","move2","pokemonWeight","weight","pokemonHeight","height","pokeballBackground","map","idx","stats","stat","base_stat","style","width","useStyles","makeStyles","theme","modal","position","borderRadius","backgroundColor","border","boxShadow","shadows","top","left","transform","overflow","Card","styles","setSelected","body","useContext","preventDefault","includes","Modal","open","onClose","Pagination","onClickLeft","onClickRight","page","total","Pokedex","pokemons","setPage","loading","NotFound","localStorageKey","App","setPokemons","setTotal","setLoading","likes","setLikes","notFound","setNotFound","searching","setSearching","fetchPokemons","promises","results","Promise","all","Math","ceil","count","useEffect","JSON","parse","window","localStorage","getItem","loadPokemonsLiked","result","updated","isLiked","indexOf","splice","push","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68f7e327.chunk.js","sourcesContent":["import { pagination } from \"./constants/constants\";\nexport const searchPokemon = async (pokemon) => {\n  try {\n    let url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {}\n};\n\nexport const getPokemons = async (limit = { pagination }, offset = 0) => {\n  try {\n    let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {}\n};\nexport const getPokemonData = async (url) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {}\n};\n","export const pagination = 5;\n","import React from \"react\";\n\nconst LikeContext = React.createContext({\n  pokemonsLiked: [],\n  updatePokemonsLikes: (id) => null,\n});\n\nexport const LikesProvider = LikeContext.Provider;\n\nexport default LikeContext;\n","export default __webpack_public_path__ + \"static/media/logo.e4828096.svg\";","export default __webpack_public_path__ + \"static/media/spain.7dddb7fe.svg\";","export default __webpack_public_path__ + \"static/media/us.7f6eb121.svg\";","import React from \"react\";\nimport Logo from \"../../assets/svg/logo.svg\";\nimport Spanish from \"../../assets/svg/spain.svg\";\nimport English from \"../../assets/svg/us.svg\";\nimport \"./Appbar.scss\";\n\nexport default function Appbar(props) {\n  const { isEnglish, setIsEnglish } = props;\n  const changeLanguage = () => {\n    setIsEnglish(!isEnglish);\n  };\n\n  const language = isEnglish ? (\n    <img src={Spanish} alt=\"spanish\" onClick={changeLanguage} />\n  ) : (\n    <img src={English} alt=\"english\" onClick={changeLanguage} />\n  );\n  return (\n    <div className=\"app-bar\">\n      <div className=\"language\">{language}</div>\n      <div className=\"logo\">\n        <img src={Logo} alt=\"logo\" className=\"logo__img\" />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BiSearchAlt } from \"react-icons/bi\";\nimport \"./Searchbar.scss\";\n\nexport default function Searchbar(props) {\n  const { onSearch, isEnglish } = props;\n  const [search, setSearch] = useState(\"\");\n  const onChange = (e) => {\n    setSearch(e.target.value);\n    console.log(e.target.value);\n    if (e.target.value.length === 0) {\n      onSearch(null);\n    }\n  };\n  const onClick = async (e) => {\n    onSearch(search);\n  };\n  return (\n    <div className=\"searchbar\">\n      <input\n        placeholder={isEnglish ? \"Search\" : \"Buscar\"}\n        onChange={onChange}\n        className=\"searchbar__input\"\n      />\n      <button onClick={onClick} className=\"searchbar__btn\">\n        <BiSearchAlt className=\"searchbar__btn-icon\" />\n      </button>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Pokeball.e67137ce.svg\";","import React from \"react\";\nimport \"./Loader.scss\";\nimport Pokeball from \"../../assets/svg/Pokeball.svg\";\n\nexport default function Loader() {\n  return (\n    <div className=\"loading\">\n      <img src={Pokeball} alt=\"loading\" className=\"loading__img\" />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/PokeballBackground.eb0411f8.svg\";","import React from \"react\";\nimport { ImCancelCircle } from \"react-icons/im\";\nimport { VscSymbolRuler } from \"react-icons/vsc\";\nimport { FaWeight } from \"react-icons/fa\";\n\nimport pokeballBackground from \"../../assets/svg/PokeballBackground.svg\";\nimport \"./Details.scss\";\n\nexport default function Details(props) {\n  const { selected, setModal, isEnglish } = props;\n  console.log(selected);\n  const primaryType = selected.types[0].type.name;\n  const image1 = selected.sprites.front_default;\n  const image2 = selected.sprites.back_default;\n  const image3 = selected.sprites.front_shiny;\n  const image4 = selected.sprites.back_shiny;\n\n  const name = selected.name;\n  const idPokemon = selected.id;\n  const move1 = selected.moves[0].move.name;\n  const move2 = selected.moves[1].move.name;\n  const pokemonWeight = selected.weight;\n  const pokemonHeight = selected.height / 10;\n\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  return (\n    <div className=\"details\">\n      <div className=\"details__card\">\n        <div className={`details__card-header colorModal-${primaryType}`}>\n          <div className=\"details__card-header_top\">\n            <button\n              className=\"details__card-header_top-btn\"\n              onClick={closeModal}\n            >\n              <ImCancelCircle className=\"details__card-header_top-btn_icon\" />\n            </button>\n            <p className=\"details__card-header_top-name\">{name}</p>\n            <p className=\"details__card-header_top-id\">#{idPokemon}</p>\n          </div>\n          <div className=\"details__card-header_img\">\n            <img src={pokeballBackground} alt=\"pokeball\" />\n          </div>\n        </div>\n        <div className=\"details__card-img\">\n          <img src={image1} alt={name} />\n          <img src={image2} alt={name} />\n          <img src={image3} alt={name} />\n          <img src={image4} alt={name} />\n        </div>\n        <div className=\"details__card-data\">\n          <div className=\"details__card-data_types\">\n            {selected.types.map((pokemon, idx) => {\n              return (\n                <div\n                  className={`details__card-data_types-item colorModal-${selected.types[idx].type.name}`}\n                  key={selected.types[idx].type.name}\n                >\n                  <p>{selected.types[idx].type.name}</p>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"details__card-data_about\">\n            <p className=\"details__card-data_about-title\">\n              {isEnglish ? \"About\" : \"Detalles\"}\n            </p>\n            <div className=\"details__card-data_about-data\">\n              <div className=\"details__card-data_about-data_weight\">\n                <div className=\"details__card-data_about-data_weight-top\">\n                  <FaWeight />\n                  {pokemonWeight} Kg\n                </div>\n                <div className=\"details__card-data_about-data_weight-bottom\">\n                  {isEnglish ? \"Weight\" : \"Peso\"}\n                </div>\n              </div>\n              <div className=\"details__card-data_about-data_height\">\n                <div className=\"details__card-data_about-data_height-top\">\n                  <VscSymbolRuler />\n                  {pokemonHeight} m\n                </div>\n                <div className=\"details__card-data_about-data_height-bottom\">\n                  {isEnglish ? \"Height\" : \"Altura\"}\n                </div>\n              </div>\n              <div className=\"details__card-data_about-data_moves\">\n                <p>{move1}</p>\n                <p>{move2}</p>\n                <div className=\"details__card-data_about-data_weight-bottom\">\n                  {isEnglish ? \"Moves\" : \"Movimientos\"}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"details__card-data_stats\">\n            {selected.stats.map((pokemon, idx) => {\n              return (\n                <div\n                  key={selected.stats[idx].stat.name}\n                  className=\"details__card-data_stats-item\"\n                >\n                  <p className=\"details__card-data_stats-item_name\">\n                    {selected.stats[idx].stat.name}\n                  </p>\n                  <div>\n                    <p className=\"details__card-data_stats-item_data\">\n                      {selected.stats[idx].base_stat}\n                    </p>\n                    <div className=\"details__card-data_stats-item_bar\">\n                      <div\n                        className={`details__card-header colorModal-${primaryType} details__card-data_stats-item_bar-progress`}\n                        style={{ width: `${selected.stats[idx].base_stat}px` }}\n                      ></div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { AiFillHeart, AiOutlineHeart } from \"react-icons/ai\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Details from \"../Details\";\nimport \"./Card.scss\";\nimport LikeContext from \"../../contexts/likeContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    position: \"absolute\",\n    width: \"320px\",\n    height: \"520px\",\n    borderRadius: \"20px\",\n    backgroundColor: \"#FFF\",\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    overflow: \"hidden\",\n  },\n}));\n\nexport default function Card(props) {\n  const { pokemon, isEnglish } = props;\n  const styles = useStyles();\n  const [modal, setModal] = useState(false);\n  const [selected, setSelected] = useState();\n  const openModal = () => {\n    setModal(!modal);\n  };\n  const body = (\n    <div className={styles.modal}>\n      <Details selected={selected} setModal={setModal} isEnglish={isEnglish} />\n    </div>\n  );\n\n  const { pokemonsLiked, updatePokemonsLikes } = useContext(LikeContext);\n  const clickHeart = (e) => {\n    e.preventDefault();\n    updatePokemonsLikes(pokemon.name);\n  };\n  const primaryType = pokemon.types[0].type.name;\n  const selectPokemon = (e) => {\n    e.preventDefault();\n    setSelected(pokemon);\n    setModal(true);\n  };\n  return (\n    <>\n      <div className={`card color-${primaryType}`}>\n        <div className=\"card__header\">\n          <button className=\"card__header-btn\" onClick={clickHeart}>\n            {pokemonsLiked.includes(pokemon.name) ? (\n              <AiFillHeart className=\"card__header-fillHeart\" />\n            ) : (\n              <AiOutlineHeart className=\"card__header-emptyHeart\" />\n            )}\n          </button>\n          <div>#{pokemon.id}</div>\n        </div>\n        <div className=\"card__picture\">\n          <img\n            src={pokemon.sprites.front_default}\n            alt={pokemon.name}\n            onClick={selectPokemon}\n          />\n        </div>\n        <div className=\"card__name\">\n          <h3>{pokemon.name}</h3>\n        </div>\n      </div>\n      {pokemon ? (\n        <Modal\n          open={modal}\n          onClose={openModal}\n          selected={selected}\n          isEnglish={isEnglish}\n        >\n          {body}\n        </Modal>\n      ) : (\n        <div></div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { FaArrowCircleLeft, FaArrowAltCircleRight } from \"react-icons/fa\";\nimport \"./Pagination.scss\";\n\nexport default function Pagination(props) {\n  const { onClickLeft, onClickRight, page, total } = props;\n  return (\n    <div className=\"pagination\">\n      {page === 1 ? (\n        <div />\n      ) : (\n        <button className=\"pagination__btn\">\n          <FaArrowCircleLeft\n            className=\"pagination__btn-arrow\"\n            onClick={onClickLeft}\n          />\n        </button>\n      )}\n      <div>\n        {page} de {total}\n      </div>\n      {page === total ? (\n        <div />\n      ) : (\n        <button className=\"pagination__btn\">\n          <FaArrowAltCircleRight\n            className=\"pagination__btn-arrow\"\n            onClick={onClickRight}\n          />\n        </button>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport LikeContext from \"../../contexts/likeContext\";\nimport { AiFillHeart } from \"react-icons/ai\";\nimport Loader from \"../Loader\";\nimport Card from \"../Card\";\nimport Pagination from \"../Pagination\";\nimport \"./Pokedex.scss\";\n\nexport default function Pokedex(props) {\n  const { pokemonsLiked } = useContext(LikeContext);\n  const { pokemons, page, setPage, total, loading, isEnglish } = props;\n  const lastPage = () => {\n    setPage(page - 1);\n  };\n\n  const nextPage = () => {\n    setPage(page + 1);\n  };\n  return (\n    <div className=\"results\">\n      <div className=\"results__header\">\n        <div className=\"results__header-heart\">\n          <AiFillHeart className=\"results__header-heart_icon\" />\n          {pokemonsLiked.length} {pokemonsLiked.length === 1 ? \"like\" : \"likes\"}\n        </div>\n        <Pagination\n          className=\"results__header-pagination\"\n          onClickLeft={lastPage}\n          onClickRight={nextPage}\n          page={page + 1}\n          total={total}\n        />\n      </div>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"cards\">\n          {pokemons.map((pokemon, idx) => {\n            return (\n              <Card\n                pokemon={pokemon}\n                key={pokemon.name}\n                isEnglish={isEnglish}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FaSadCry } from \"react-icons/fa\";\nimport \"./NotFound.scss\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"notfound\">\n      <FaSadCry className=\"notfound__icon\" />\n      <h3 className=\"notfound__text\">No encontrado</h3>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { getPokemons, getPokemonData, searchPokemon } from \"./api\";\nimport { pagination } from \"./constants/constants\";\nimport { LikesProvider } from \"./contexts/likeContext\";\nimport Appbar from \"./components/Appbar\";\nimport Searchbar from \"./components/Searchbar\";\nimport Pokedex from \"./components/Pokedex\";\nimport NotFound from \"./components/NotFound\";\nimport \"./App.scss\";\n\nconst localStorageKey = \"pokemon_liked\";\n\nfunction App() {\n  const [pokemons, setPokemons] = useState([]);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState();\n  const [loading, setLoading] = useState(true);\n  const [likes, setLikes] = useState([]);\n  const [notFound, setNotFound] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [isEnglish, setIsEnglish] = useState(true);\n  const fetchPokemons = async () => {\n    try {\n      setLoading(true);\n      const data = await getPokemons(pagination, pagination * page);\n      const promises = data.results.map(async (pokemon) => {\n        return await getPokemonData(pokemon.url);\n      });\n      const results = await Promise.all(promises);\n      setPokemons(results);\n      setLoading(false);\n      setTotal(Math.ceil(data.count / pagination));\n      setNotFound(false);\n    } catch (error) {}\n  };\n  const loadPokemonsLiked = () => {\n    const pokemons =\n      JSON.parse(window.localStorage.getItem(localStorageKey)) || [];\n    setLikes(pokemons);\n  };\n  useEffect(() => {\n    loadPokemonsLiked();\n  }, []);\n  useEffect(() => {\n    if (!searching) {\n      fetchPokemons();\n    }\n  }, [page]);\n\n  const updatePokemonsLikes = (name) => {\n    const updated = [...likes];\n    const isLiked = likes.indexOf(name);\n    if (isLiked >= 0) {\n      updated.splice(isLiked, 1);\n    } else {\n      updated.push(name);\n    }\n    setLikes(updated);\n    window.localStorage.setItem(localStorageKey, JSON.stringify(updated));\n  };\n\n  const onSearch = async (pokemon) => {\n    if (!pokemon) {\n      return fetchPokemons();\n    }\n    setLoading(true);\n    setNotFound(false);\n    setSearching(true);\n    const result = await searchPokemon(pokemon);\n    if (!result) {\n      setNotFound(true);\n      setLoading(false);\n      return;\n    } else {\n      setPokemons([result]);\n      setPage(0);\n      setTotal(1);\n    }\n    setLoading(false);\n    setSearching(false);\n  };\n\n  return (\n    <LikesProvider\n      value={{\n        pokemonsLiked: likes,\n        updatePokemonsLikes: updatePokemonsLikes,\n      }}\n    >\n      <Appbar isEnglish={isEnglish} setIsEnglish={setIsEnglish} />\n      <Searchbar onSearch={onSearch} isEnglish={isEnglish} />\n      {notFound ? (\n        <NotFound />\n      ) : (\n        <Pokedex\n          pokemons={pokemons}\n          page={page}\n          setPage={setPage}\n          total={total}\n          loading={loading}\n          isEnglish={isEnglish}\n        />\n      )}\n    </LikesProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}